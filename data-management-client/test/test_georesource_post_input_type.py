# coding: utf-8

"""
    KomMonitor Data Access API

    erster Entwurf einer Datenzugriffs-API, die den Zugriff auf die KomMonitor-Datenhaltungsschicht kapselt.

    The version of the OpenAPI document: 0.0.1
    Contact: christian.danowski-buhren@hs-bochum.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.georesource_post_input_type import GeoresourcePOSTInputType

class TestGeoresourcePOSTInputType(unittest.TestCase):
    """GeoresourcePOSTInputType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GeoresourcePOSTInputType:
        """Test GeoresourcePOSTInputType
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GeoresourcePOSTInputType`
        """
        model = GeoresourcePOSTInputType()
        if include_optional:
            return GeoresourcePOSTInputType(
                allowed_roles = [
                    ''
                    ],
                aoi_color = '',
                dataset_name = '',
                geo_json_string = '',
                is_aoi = True,
                is_loi = True,
                is_poi = True,
                json_schema = '',
                loi_color = '',
                loi_dash_array_string = '',
                loi_width = 1.337,
                metadata = openapi_client.models.common_metadata_type.CommonMetadataType(
                    contact = '', 
                    databasis = '', 
                    datasource = '', 
                    description = '', 
                    last_update = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    literature = '', 
                    note = '', 
                    srid_epsg = 1.337, 
                    update_interval = 'ARBITRARY', ),
                period_of_validity = openapi_client.models.period_of_validity_type.PeriodOfValidityType(
                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                poi_marker_color = 'white',
                poi_symbol_bootstrap3_name = '',
                poi_symbol_color = 'white',
                topic_reference = ''
            )
        else:
            return GeoresourcePOSTInputType(
                dataset_name = '',
                metadata = openapi_client.models.common_metadata_type.CommonMetadataType(
                    contact = '', 
                    databasis = '', 
                    datasource = '', 
                    description = '', 
                    last_update = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    literature = '', 
                    note = '', 
                    srid_epsg = 1.337, 
                    update_interval = 'ARBITRARY', ),
                period_of_validity = openapi_client.models.period_of_validity_type.PeriodOfValidityType(
                    end_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    start_date = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
        )
        """

    def testGeoresourcePOSTInputType(self):
        """Test GeoresourcePOSTInputType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
