# coding: utf-8

"""
    KomMonitor Data Access API

    erster Entwurf einer Datenzugriffs-API, die den Zugriff auf die KomMonitor-Datenhaltungsschicht kapselt.

    The version of the OpenAPI document: 0.0.1
    Contact: christian.danowski-buhren@hs-bochum.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.api.spatial_units_public_controller_api import SpatialUnitsPublicControllerApi


class TestSpatialUnitsPublicControllerApi(unittest.TestCase):
    """SpatialUnitsPublicControllerApi unit test stubs"""

    def setUp(self) -> None:
        self.api = SpatialUnitsPublicControllerApi()

    def tearDown(self) -> None:
        pass

    def test_get_all_spatial_unit_features_by_id1(self) -> None:
        """Test case for get_all_spatial_unit_features_by_id1

        retrieve all feature entries for all applicable periods of validity for the selected spatial unit/level (hence might contain each feature multiple times if they exist for different periods of validity)
        """
        pass

    def test_get_spatial_units1(self) -> None:
        """Test case for get_spatial_units1

        retrieve information about available features of different spatial units/levels
        """
        pass

    def test_get_spatial_units_by_id1(self) -> None:
        """Test case for get_spatial_units_by_id1

        retrieve information about available features of the selected spatial unit/level
        """
        pass

    def test_get_spatial_units_by_id_and_year_and_month1(self) -> None:
        """Test case for get_spatial_units_by_id_and_year_and_month1

        retrieve the features according to the selected spatial unit/level and selected year and month as GeoJSON
        """
        pass

    def test_get_spatial_units_schema_by_id1(self) -> None:
        """Test case for get_spatial_units_schema_by_id1

        retrieve the JSON schema for the selected spatial unit/level
        """
        pass


if __name__ == '__main__':
    unittest.main()
