# coding: utf-8

"""
    KomMonitor Data Access API

    erster Entwurf einer Datenzugriffs-API, die den Zugriff auf die KomMonitor-Datenhaltungsschicht kapselt.

    The version of the OpenAPI document: 0.0.1
    Contact: christian.danowski-buhren@hs-bochum.de
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest
import datetime

from openapi_client.models.topic_overview_type import TopicOverviewType

class TestTopicOverviewType(unittest.TestCase):
    """TopicOverviewType unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> TopicOverviewType:
        """Test TopicOverviewType
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `TopicOverviewType`
        """
        model = TopicOverviewType()
        if include_optional:
            return TopicOverviewType(
                sub_topics = [
                    openapi_client.models.topic_overview_type.TopicOverviewType(
                        sub_topics = [
                            openapi_client.models.topic_overview_type.TopicOverviewType(
                                topic_description = '', 
                                topic_id = '', 
                                topic_name = '', 
                                topic_resource = 'indicator', 
                                topic_type = 'main', )
                            ], 
                        topic_description = '', 
                        topic_id = '', 
                        topic_name = '', 
                        topic_resource = 'indicator', 
                        topic_type = 'main', )
                    ],
                topic_description = '',
                topic_id = '',
                topic_name = '',
                topic_resource = 'indicator',
                topic_type = 'main'
            )
        else:
            return TopicOverviewType(
                topic_description = '',
                topic_id = '',
                topic_name = '',
                topic_type = 'main',
        )
        """

    def testTopicOverviewType(self):
        """Test TopicOverviewType"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
