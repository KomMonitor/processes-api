version: '3'

services:
  kommonitor-processes-api:
    image: kommonitor/processes-api:dev
    container_name: kommonitor-processes-api
    restart: unless-stopped
    env_file:
      - ./dev.env
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
      PROCESS_RESULTS_DIR: /app/processor/results
    ports:
     - 8000:8000
     - 8099:8099
     - 8095:8095
  prefect-db:
    image: postgres:15
    container_name: prefect-db
    restart: unless-stopped
    volumes:
      - ./storage/db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d ${DB_NAME} -U ${DB_USER}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    environment:
      POSTGRES_USER: ${DB_USER}
#      PGUSER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
  prefect-server:
    image: prefecthq/prefect:3.4.6-python3.13
    container_name: prefect-server
    restart: unless-stopped
    command: prefect server start
    ports:
      - "4200:4200"
    depends_on:
       prefect-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "'import urllib.request; import sys; response = urllib.request.urlopen(\"${PREFECT_API_URL}/health\"); sys.exit(0) if response.getcode() == 200 else sys.exit(1)'"]
      interval: 10s
      timeout: 5s
      retries: 3
    environment:
      PREFECT_SERVER_API_HOST: 0.0.0.0
      PREFECT_API_URL: http://127.0.0.1:4200/api
      PREFECT_SERVER_DATABASE_CONNECTION_URL: postgresql+asyncpg://prefect:prefect@prefect-db:5432/prefect
  prefect-worker:
    image: prefecthq/prefect:3.4.6-python3.13
    container_name: prefect-worker
    restart: unless-stopped
    command: prefect worker start -p kommonitor-work-pool --type process
    environment:
      PREFECT_API_URL: http://prefect-server:4200/api
      PROCESS_RESULTS_DIR: /opt/prefect
    env_file:
      - ./dev.env
    depends_on:
       prefect-server:
        condition: service_healthy